<experiment>
	<name value="coolstreamingIngredients" />
	<seed value="12345678" />
	<playbackSeconds value="30" />
	<runs value="1" />
	<serverUploadBandwidth value="20000000" />
	<enableWaitQueueLimit/>

	<!-- <uploadBandwidthDistribution> <distribution type="ConstantDistribution" 
		value="3100000" /> </uploadBandwidthDistribution> -->
	<!-- <uploadBandwidthDistribution> <distribution type="UniformDistribution" 
		min="1600000" max="3100000" /> </uploadBandwidthDistribution> -->

	<uploadBandwidthDistribution>
		<distribution type="MovieTimeDistribution">
			<distribution type="NormalDistribution" mean="2600000"
				variance="1000000" />
			<distribution type="NormalDistribution" mean="2600000"
				variance="1000000" from="300" />
		</distribution>
	</uploadBandwidthDistribution>

	<messageHeaderSize value="64" />

	<cycleLength value="1000" />
	<framework value="PeerSimFramework" dropRate="0.0" />

	<!-- <churnModel type="availabilityFile"> <availabilityFile value="experimentXmls/sopcast.avail" 
		/> </churnModel> -->

	<churnModel type="sessionLengthAddOnFailure">
		<sessionLengthDistribution>
			<distribution type="MovieTimeDistribution">
				<distribution type="LogNormalDistribution" mean="3.29"
					variance="1.28" />
				<distribution type="LogNormalDistribution" mean="3.29"
					variance="1.28" from="300" />
			</distribution>
		</sessionLengthDistribution>
	</churnModel>

	<bitrate value="500000" /> <!-- 500 kbps -->

	<descriptions value="6" />

	<playerModule waitIfNoChunk="" bufferFromFirstChunk="true"
		serverStartup="10000" startupBuffering="3000" streamWindowSize="120" />

	<!-- <playerModule bufferFromFirstChunk="true" serverStartup="10000" startupBuffering="2000" 
		streamWindowSize="120" /> -->


	<streamingModule algorithm="AdaptiveStreaming" size="100" changeTimeout="50">
		<streamingModule algorithm="PullAlgorithm">
			<!-- <overlayModule H="10" L="7" S="12" algorithm="Araneola" amountToSend="3" 
				connect_timeout="2" disconnect_timeout="2" gossipDelay="6" > -->
			<overlayModule groupSize="4" algorithm="RandomMinSizeGroupOverlay"> 
			<!-- <overlayModule H="200" M="7" c="1" amountToSend="3" exploreRound="30" gossipTimeout="6" algorithm="CoolStreamingOverlay">-->
				<ingredient name="NeighborChunkAvailabilityIngredient" operationMode="UpdateEveryChunk" />
			</overlayModule>
			<ingredient name="SourcePushIngredient" />
			<ingredient name="EarliestContinuousChunkVSInitIngredient" maxOffset="0" />
			<ingredient name="HandleChunkRequestsOnArrivalIngredient" />
			<ingredient name="CoolstreamingChunkRequestIngredient"/> 
			<!--<ingredient name="ChainsawChunkRequestIngredient" />-->
			<ingredient name="ChunkChoiceMeasurement" />
		</streamingModule>
		<streamingModule algorithm="PushPull">
			<overlayModule algorithm="TreeBone" stableCoefficient="0.75" queryTimeout="5" freeSlots="1" />
			<streamingModule algorithm="PullAlgorithm">
				<!-- <overlayModule H="10" L="4" S="12" algorithm="Araneola" amountToSend="3" 
					connect_timeout="2" disconnect_timeout="2" gossipDelay="6" /> -->
				<overlayModule groupSize="4" algorithm="RandomMinSizeGroupOverlay">
					<ingredient name="NeighborChunkAvailabilityIngredient" operationMode="UpdateEveryChunk" />
				</overlayModule>
				<ingredient name="EarliestContinuousChunkVSInitIngredient" maxOffset="0" />
			<ingredient name="HandleChunkRequestsOnArrivalIngredient" />
			<ingredient name="CoolstreamingChunkRequestIngredient"/> 
			<!--<ingredient name="ChainsawChunkRequestIngredient" />-->
			<ingredient name="ChunkChoiceMeasurement" />
			</streamingModule>
		</streamingModule>
 		<banditsAlgo name="ConstBanditsAlgo" option ="0" /> 
	<!--	<banditsAlgo name="EpsilonGreedy">
			<banditReward name="InfoGather" timeout="10">
				<banditReward name="ChunksReceivedReward" />
			</banditReward> 
		</banditsAlgo> -->  
	</streamingModule>
</experiment>
